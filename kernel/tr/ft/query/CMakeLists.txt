include(CompareVersions)

set(query_SRC ftq_lexer.l ft_query.cpp ftq_parser.cpp)
set(generated_ft_lexer_files ftq_lexer.cpp)
list(APPEND query_SRC ${generated_ft_lexer_files})

set(GEN_LEXER 1)  # 1 -- means we'll use flex

find_package(FLEX)
if (FLEX_FOUND)
    COMPARE_VERSION_STRINGS(${FLEX_VERSION} "2.5.33" ver_res)
    if (ver_res EQUAL -1)
        message(STATUS "Flex version is less than 2.5.33 -- cannot build lexer")
        set(GEN_LEXER 0)
    endif (ver_res EQUAL -1)
else (FLEX_FOUND)
        message(STATUS "Flex is not found -- cannot build lexer")
        set(GEN_LEXER 0)
endif (FLEX_FOUND)

if (GEN_LEXER)
    file(MAKE_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/ft/query)
    FLEX_TARGET(ftq_lexer ft/query/ftq_lexer.l ${CMAKE_CURRENT_BINARY_DIR}/ft/query/ftq_lexer.cpp COMPILE_FLAGS --header-file="${CMAKE_CURRENT_BINARY_DIR}/ft/query/ftq_lexer.h")
    foreach (gen_src ${generated_ft_lexer_files})
        source_group("ft\\query\\Generated Parser" FILES ${CMAKE_CURRENT_BINARY_DIR}/ft/query/${gen_src})
    endforeach (gen_src)
    set(USING_PREGEN_LEXER 0 CACHE INTERNAL "Set to 1 if we're using our own lexer files")
else (GEN_LEXER)
    message(STATUS "Using pre-generated lexer files -- ${generated_ft_lexer_files}")
    foreach (lf ${generated_ft_lexer_files})
        if (NOT EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/ft/query/${lf})
            MESSAGE(FATAL_ERROR "Pregenerated lexer file ${CMAKE_CURRENT_SOURCE_DIR}/ft/query/${lf} not found. Use Sedna source build or generate it manually")
        endif (NOT EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/ft/query/${lf})
    endforeach (lf)
    set(USING_PREGEN_LEXER 1 CACHE INTERNAL "Set to 1 if we're using our own lexer files")
endif (GEN_LEXER)
