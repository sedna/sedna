#!/bin/bash

###############################################################################
# File: doc2html.sh: Script to build HTML version of the documentation.
# Copyright (C) 2010 ISP RAS
# Insitute for System Programming of the Russian Academy of Sciences
#
# Scipt creates HTML versions of the Programmers Guide, Administation Guide
# and Client-Server Protocol documents. Both one-HTML-page and hierarchical
# HTML version are created in the following places:
#
# AdminGuide.tex --> DOC2HTML_PREFIX/one-page/AdminGuide.html (1-level)
#                --> DOC2HTML_PREFIX/adminguide/*.html (3-level)
# ProgGuide.tex  --> DOC2HTML_PREFIX/one-page/ProgGuide*.html (1-level)
#                --> DOC2HTML_PREFIX/progguide/*.html (3-level)
# ClientServerProtocol.tex  
#              --> DOC2HTML_PREFIX/one-page/ClientServerProtocol.html (1-level)
#              --> DOC2HTML_PREFIX/serverprotocol/*.html (3-level)
#
# Note! To run this script you need bash, awk, htlatex installed.
###############################################################################

# Change this value if you moved this script.
# It's provided related to the Sedna source tree.
DOC2HTML_PREFIX=scripts/doc2html

# Change this value if you moved documentation.
# It's provided related to the Sedna source tree.
DOC_PREFIX=doc

# Add some rubustness
set -e
set -u

# Cleanups everything and exits on a failure
# $1 - error message to print on exit
failwith()
{
    echo "Error: $*" 1>&2
    popd >/dev/null 2>&1
    exit 1
}

exithandler() {
  failwith "Abort."
}
trap exithandler 2 3 9 15

# Searchs in path for the command. Exists if command could not be found.
# $1 - command name to search
lookfor() {
  save_IFS="${IFS}"
    IFS="${IFS}:"
    for dir in $PATH; do
      if test -x "$dir/$1"; then
        eval "$1=$dir/$1"
        IFS="$save_IFS"
        return
      fi
    done
    IFS="$save_IFS"
    failwith "Could not find \"$1\"."
}

# Check that awk, htlatex exist
lookfor awk
lookfor htlatex

# Generates documentation with tex4t
# $1 - TeX source file
# $2 - number of levels (1 - one page HTML)
generate()
{
  if [ $# -ne 2 ]; then
    failwith "generate() expects 2 arguments, given $#"
  fi 
  htlatex "$1" "$SEDNA_CONFIG,$2"
}

# Moves HTML files from the intemediate build (current) directory into the 
# desination location. Creates descination path if it doesn't exist.
# $1 - path to move files into
move_files() 
{
  if [ $# -ne 1 ]; then
    failwith "move_file() expects 1 argument, given $#"
  fi
  PATH_TO_MOVE="$SOURCE_DIR/$DOC2HTML_PREFIX/$1"
  if [ ! -d "$PATH_TO_MOVE" ]; then 
    mkdir "$PATH_TO_MOVE"
  fi
  mv *.html "$PATH_TO_MOVE"
}

# Replace leveled contents generated by default with one-level version
# $1 - file in which contents must be replaced
# $2 - file from which new contents to take
replace_contents()
{
  if [ $# -ne 2 ]; then
    failwith "replace_content() expects 2 arguments, given $#"
  fi
  awk '{print}
       /<div class=\"tableofcontents\">/ {exit}' "$1" > ___temp.html
  awk '/<div class=\"tableofcontents\">/,/<\/div>/' "$2" >> ___temp.html
  awk 'BEGIN {skip = 0}
       /<div class=\"tableofcontents\">/,/<\/div>/ {skip = 1
                                                    next}
       skip == 1 {print}' "$1" >> ___temp.html
  mv ___temp.html "$1"

}

# Determine directory which contains documentation
SOURCE_DIR=$(cd $(dirname $0) && cd ../.. && pwd)
SEDNA_CONFIG="$SOURCE_DIR/$DOC2HTML_PREFIX/sedna.cfg"

pushd "$SOURCE_DIR/$DOC2HTML_PREFIX" >/dev/null

# Create directory for intermediate files
if [ ! -d "build" ]; then 
  mkdir "build"
fi
cd build

# Programmers Guide
generate "$SOURCE_DIR/$DOC_PREFIX"/ProgGuide/ProgGuide.tex 1
move_files "one-page"
generate "$SOURCE_DIR/$DOC_PREFIX"/ProgGuide/ProgGuide.tex 3
move_files "progguide"
replace_contents "$SOURCE_DIR/$DOC2HTML_PREFIX"/progguide/ProgGuide.html "$SOURCE_DIR/$DOC2HTML_PREFIX"/progguide/ProgGuideli1.html 

# Client-server Protocol
generate "$SOURCE_DIR/$DOC_PREFIX"/ClientServerProtocol/ClientServerProtocol.tex 1
move_files "one-page"
generate "$SOURCE_DIR/$DOC_PREFIX"/ClientServerProtocol/ClientServerProtocol.tex 3
move_files "serverprotocol"

# Administation Guide
generate "$SOURCE_DIR/$DOC_PREFIX"/AdminGuide/AdminGuide.tex 1
move_files "one-page"
generate "$SOURCE_DIR/$DOC_PREFIX"/AdminGuide/AdminGuide.tex 3
move_files "adminguide"
replace_contents "$SOURCE_DIR/$DOC2HTML_PREFIX"/adminguide/AdminGuide.html "$SOURCE_DIR/$DOC2HTML_PREFIX"/adminguide/AdminGuideli1.html 

cd ..
popd >/dev/null

