
                                Sedna FAQ


     _________________________________________________________________

                            General Questions

     _________________________________________________________________

G1.  How to drop a database?

G2.  I got the following error trying to run se_sm:
     SE4212
     Database files format is incompatible with SEDNA binaries
     Details: See file FAQ shipped with the distribution

     What's wrong?

G3.  I got one of the following errors trying to run se_cdb:

     SEDNA Message: ERROR SE1015
     There is no enough memory to initialize buffers.
     Details: See file FAQ shipped with the distribution

     or

     SEDNA Message: ERROR SE1016
     Cannot lock buffer memory.
     Details: See file FAQ shipped with the distribution

     What's wrong?


     _________________________________________________________________

                         Linux Specific Questions

     _________________________________________________________________

L1.  I got the following error trying to run se_gov:
     SE1000
     Environment error. This error is caused by environment (operating system).
     Details: Failed to bind socket

     Is it a bug?

L2.  I have downloaded a binary version and tried to use SQL Connection.
     I got the following error:

     SE2113
     SQL Connection support disabled

L3.  I got the following error trying to run se_gov:
     SE4074
     Can't create memory mapping
     Details: See file FAQ shipped with the distribution

     Am I able to run Sedna on my computer?




     _________________________________________________________________

                                 Answers

     _________________________________________________________________


G1.  In early versions of Sedna you had to drop a database by manually 
     removing database files. Now it is better to use 'se_ddb' command. For 
     details see documentation provided with the distribution or just run 
     'se_dbb -help'.


G2.  Typically this error message means that you have upgraded Sedna to a 
     newer version and you are trying to run Sedna on a database created with 
     the previous version of Sedna. The solution to the problem is so called 
     migration procedure performed by se_exp utility. See Sedna Administration 
     Guide ('Migration between Releases' section) for details.

G3.  Most likely, the reason of the problem is lack of memory. By default Sedna 
     requires 100Mb of memory for every running instance of database. You can 
     vary the required memory size by '-bufs-num' option of se_cdb. For details 
     see documentation provided with the distribution or just run 
     'se_cdb -help'.


L1.  Actually, not. Wait for several minutes and try again. 
     The problem is in sockets. The following is what socket FAQ says:

     When you issue the close() system call, you are closing your interface to 
     the socket, not the socket itself. It is up to the kernel to close the 
     socket. Sometimes, for really technical reasons, the socket is kept alive 
     for a few minutes after you close it. It is normal, for example for the 
     socket to go into a TIME_WAIT state, on the server side, for a few minutes. 
     People have reported ranges from 20 seconds to 4 minutes to me. The 
     official standard says that it should be 4 minutes. On my Linux system it 
     is about 2 minutes.


L2.  A binary Linux version does not have support for SQL Connection. This is 
     due to the problems of linking Sedna executables with static odbc library.
     But you can download Sedna sources and compile Sedna yourself
     with SQL_CONNECTION variable set to 1. See INSTALL file provided with
     Sedna sources for additional information.


L3.  Hopefully, you are. The desribed situation happens when your Linux 
     installation does not turn on support for shm fs. Without it, it is not
     POSIX compatible. The problem is known to happen on ALT Linux, some 
     Debian installations (possibly with kernel 2.4). The problem can be 
     fixed by mounting /dev/shm.

     I. One way is to issue the following command (valid until system 
        restarts). Note that you need root privileges.

     mount -t tmpfs tmpfs /dev/shm

     If you have no /dev/shm, just create it:

     mkdir /dev/shm


     II. Another way is to edit configuration files (also valid after system
         restart). Note that you need root privileges.

       1. Add the following line to /etc/fstab (if it isn't there already):

          tmpfs /dev/shm tmpfs defaults 0 0 

       2. Mount shared memory as follows:

          mount /dev/shm

       3. Issue the following command to check that it mounted properly:

          mount | grep "shm"

          If the mount was successful, then the following output (or similar) 
          should appear: 

          tmpfs on /dev/shm type tmpfs (rw)

          If the output from this command is blank, then the mount failed.
          If /dev/shm fails to mount, then this feature may not be turned 
          on in your Linux kernel. In this case we recommend upgrading to 
          a more recent Linux kernel, or contacting your Linux Distribution 
          vendor for more information on enabling POSIX Shared Memory.

